/*
    Giuliana Bouzon, Chilka Castro, Madalina Turcan
    student id: 1940108, 2030864 and 2038892
    Database, Winter 2021, Vanier College
    Teacher: Nagat Drawel
    Final Project
*/

-- Giu 1 : create loop to drop tables 
Begin
for c in (select table_name from user_tables) loop
execute immediate ('drop table '||c.table_name||' cascade constraints');
end loop;
End; 
/

-- Giu 2 : create loop to drop sequences 
Begin
for s in (select sequence_name from user_sequences) loop
execute immediate ('drop sequence ' || s.sequence_name);
end loop;
End; 
/

-- Giu 4 : create loop to drop indexes
Begin
for i in (select index_name from user_indexes) loop
execute immediate ('drop index ' || i.index_name);
end loop;
End; 
/

-- Giu 2 : making sure the session dates are consistent
ALTER SESSION SET NLS_DATE_FORMAT = 'MM/DD/YYYY';

-- Giu 1 : create volunteer table
CREATE TABLE VOLUNTEER (
    VOL_ID CHAR(7) CONSTRAINT VOLUNTEER_ID_PK PRIMARY KEY,
    VOL_FNAME VARCHAR(30) CONSTRAINT VOLUNTEER_FNAME_NN NOT NULL,
    VOL_LNAME VARCHAR(30) CONSTRAINT VOLUNTEER_LNAME_NN NOT NULL,
    VOL_PHONE NUMBER(10) CONSTRAINT VOLUNTEER_PHONE_UQ UNIQUE,
    VOL_ADDRESS VARCHAR(100),
    VOL_EMAIL VARCHAR(60) CONSTRAINT VOLUNTEER_EMAIL_CK CHECK(VOL_EMAIL LIKE '%@%')
);

-- Giu 1 : alter volunteer table to add constraint
ALTER TABLE VOLUNTEER
    ADD CONSTRAINT VOL_COMM_CK CHECK(VOL_PHONE IS NOT NULL OR VOL_EMAIL IS NOT NULL);

-- Giu 1 : create task table
-- Giu 2 : edited task table to include start date and end date for a task
CREATE TABLE TASK (
    TASK_ID CHAR(7) CONSTRAINT TASK_ID_PK PRIMARY KEY,
    TASK_NAME VARCHAR(30) CONSTRAINT TASK_NAME_NN NOT NULL,
    TASK_START_DATE DATE,
    TASK_END_DATE DATE,
    TASK_TYPE VARCHAR(30), 
    TASK_STATUS VARCHAR(8) CONSTRAINT TASK_STATUS_CK CHECK (UPPER(TASK_STATUS) = 'OPEN' OR
    UPPER(TASK_STATUS) = 'CLOSED' OR UPPER(TASK_STATUS) = 'ONGOING'),
    CONSTRAINT TASK_DATES_CK CHECK (TASK_END_DATE >= TASK_START_DATE)
);


-- Giu 1 : create assignment table
-- Giu 2 : edited assignment table to take off dates (change of design)
-- Giu 3 : add vol_hours and assign_date to this table as well as constraints
-- Chil 4 : added assign_start and assign_end (change of design yet again)
-- Giu 5 : added check constraint between for assign_hours
CREATE TABLE ASSIGNMENT (
    ASSIGN_ID CHAR(7) CONSTRAINT ASSIGNMENT_ID_PK PRIMARY KEY,
    VOL_ID CHAR(7),
    TASK_ID CHAR(7),
    ASSIGN_DATE DATE,
    ASSIGN_HOURS NUMBER DEFAULT 0,
    CONSTRAINT ASSIGNMENT_HOURS_CK CHECK(ASSIGN_HOURS BETWEEN 0 AND 24),
    CONSTRAINT ASSIGNMENT_VOLID_FK FOREIGN KEY (VOL_ID) REFERENCES VOLUNTEER,
    CONSTRAINT ASSIGNMENT_TASKID_FK FOREIGN KEY (TASK_ID) REFERENCES TASK
);

-- Giu 1 : create package table
-- Giu 4 : added weight constraint, between 20 - 100 lbs
-- Giu 4 : added task id constraint, since a package can only be created if assigned to a task
CREATE TABLE PACKAGE (
    PKG_ID CHAR(7) CONSTRAINT PACKAGE_ID_PK PRIMARY KEY,
    PKG_DATE DATE,
    PKG_WEIGHT NUMBER CONSTRAINT PACKAGE_WEIGHT_CK CHECK(PKG_WEIGHT BETWEEN 20 AND 100),
    TASK_ID CHAR(7) CONSTRAINT PACKAGE_TASKID_NN NOT NULL, 
    CONSTRAINT PACKAGE_TASKID_FK FOREIGN KEY (TASK_ID) REFERENCES TASK
);

-- Giu 1 : create item table
CREATE TABLE ITEM (
    ITEM_ID CHAR(7) CONSTRAINT ITEM_ID_PK PRIMARY KEY,
    ITEM_DESCRIPTION VARCHAR(50),
    ITEM_COST NUMBER CONSTRAINT ITEM_COST_CK CHECK (ITEM_COST > 0),
    ITEM_QOH NUMBER,
    CONSTRAINT ITEM_QOH_CK CHECK(ITEM_QOH >= 0)
);

-- Giu 1 : create package_item table
CREATE TABLE PACKAGE_ITEM (
    PKG_ITEM_ID CHAR(7) CONSTRAINT PKGITEM_ID_PK PRIMARY KEY,
    PKG_ID CHAR(7),
    ITEM_ID CHAR(7),
    PKG_ITEM_QOH NUMBER CONSTRAINT PKGITEM_QOH_CK CHECK (PKG_ITEM_QOH >= 0),
    CONSTRAINT PKGITEM_PKGID_FK FOREIGN KEY (PKG_ID) REFERENCES PACKAGE,
    CONSTRAINT PKGITEM_ITEMID_FK FOREIGN KEY (ITEM_ID) REFERENCES ITEM
);


-- Giu 1 : create sequence, populate volunteer table, ID, FNAME, LNAME, PHONE, ADDRESS, EMAIL, HOURS
-- Chil 2 : added some rows, concat
-- Giu 3 : changed values since volunteer table changed 
CREATE SEQUENCE VOL_ID_SEQ START WITH 9000 INCREMENT BY 10 NOCACHE;

INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Albert', 'Magnus', 1234567890, null, 'magnusa@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Chilka', 'Castro', 4386758910, null, 'castroc@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Madalina', 'Turcan', 4567324589, null, 'turcanm@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Sam', 'Purcell', 5143458723, null, 'purcells@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Dean', 'Campbell', 4502176745, null, 'campbelld@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Ash', 'Miles', 2378906578, null, 'milesa@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Atticus', 'Pund', 5248331885, null, 'punda@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Theodore', 'Finch', 4567223883, null, 'fincht@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Violet', 'Fields', 2134502117, null, 'fieldsv@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Son', 'Rife', 6418704554, null, 'rifes@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Lily', 'Scott', 4381281290, null, 'lyscott@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Joseph', 'Ramirez', 5172468091, null, 'josephramirez@gmail.com');
INSERT INTO VOLUNTEER VALUES (CONCAT('V',  VOL_ID_SEQ.NEXTVAL), 'Alicia', 'Holt ', 6234567490, null, 'aliciaholt@gmail.com');

-- Giu 3 : trigger
CREATE OR REPLACE TRIGGER TRG_TASK_UPDATESTATUS
BEFORE UPDATE OR INSERT OF TASK_START_DATE, TASK_END_DATE ON TASK
FOR EACH ROW  
    DECLARE 
        TODAY_DATE DATE;
    BEGIN 
        SELECT TO_DATE(SYSDATE, 'MM/DD/YYYY') INTO TODAY_DATE FROM DUAL;
        
        IF (:NEW.TASK_START_DATE <= TODAY_DATE AND :NEW.TASK_END_DATE >= TODAY_DATE) THEN 
            :NEW.TASK_STATUS := UPPER('ONGOING');

        ELSIF (:NEW.TASK_END_DATE < TODAY_DATE) THEN 
            :NEW.TASK_STATUS := UPPER('CLOSED');

        ELSIF (:NEW.TASK_START_DATE >= TODAY_DATE) THEN
            :NEW.TASK_STATUS := UPPER('OPEN');
        END IF; 
    END;
/
-- Giu 1 : populated task table, ID, NAME, DATE, TYPE, STATUS, sequence
-- Chil 2 : concat, added some rows
-- Giu 2 : changed status to null cuz trigger
-- Giu 2 : changed values since task table changed
CREATE SEQUENCE TASK_ID_SEQ START WITH 00001 INCREMENT BY 7 NOCACHE;

INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'SEND MEDICAL SUPPLIES',TO_DATE('05/01/2021', 'MM/DD/YYYY'), TO_DATE('05/06/2021', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'ANSWER PHONES', TO_DATE('05/01/2021', 'MM/DD/YYYY'), TO_DATE('05/01/2021', 'MM/DD/YYYY'), 'SECRETERIAL WORK', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'SEND CLOTHES', TO_DATE('04/20/2021', 'MM/DD/YYYY'), TO_DATE('04/22/2021', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'CALL CLIENTS', TO_DATE('04/20/2021', 'MM/DD/YYYY'), TO_DATE('04/23/2021', 'MM/DD/YYYY'), 'SECRETEREIAL WORK', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'PACK BOOKS', TO_DATE('11/27/2017', 'MM/DD/YYYY'), TO_DATE('12/19/2017', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'CLEAN OFFICES', TO_DATE('05/01/2021', 'MM/DD/YYYY'), TO_DATE('05/01/2021', 'MM/DD/YYYY'), 'CLEANING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'ORGANIZE INVENTORY', TO_DATE('05/01/2021', 'MM/DD/YYYY'), TO_DATE('05/01/2021', 'MM/DD/YYYY'), 'CLEANING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'CHECK ON ONGOING TASKS', TO_DATE('05/01/2021', 'MM/DD/YYYY'), TO_DATE('05/01/2021', 'MM/DD/YYYY'), 'MANAGERIAL WORK', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'SEND FOOD SUPPLY', TO_DATE('04/20/2021', 'MM/DD/YYYY'), TO_DATE('05/01/2021', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'PACK CLEANING SUPPLIES', TO_DATE('03/01/2021', 'MM/DD/YYYY'), TO_DATE('03/05/2021', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'PROVIDE CHILDREN TOYS', TO_DATE('05/03/2021', 'MM/DD/YYYY'), TO_DATE('05/15/2021', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'ASSIST DISTRIBUTION OF SUPPLY', TO_DATE('11/18/2020', 'MM/DD/YYYY'), TO_DATE('11/20/2020', 'MM/DD/YYYY'), 'DISTRIBUTOR', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'SERVE FOOD', TO_DATE('05/04/2021', 'MM/DD/YYYY'), TO_DATE('05/23/2021', 'MM/DD/YYYY'), 'KITCHEN WORK', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'HELP PREPARE FOOD', TO_DATE('05/04/2021', 'MM/DD/YYYY'), TO_DATE('05/23/2021', 'MM/DD/YYYY'), 'KITCHEN WORK', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'PLANT TREES', TO_DATE('08/09/2021', 'MM/DD/YYYY'), TO_DATE('05/23/2022', 'MM/DD/YYYY'), 'PLANTING WORK', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'SEND SCHOOL SUPPLIES', TO_DATE('05/23/2021', 'MM/DD/YYYY'), TO_DATE('06/23/2021', 'MM/DD/YYYY'), 'PACKING', null);
INSERT INTO TASK VALUES (CONCAT('T',TASK_ID_SEQ.NEXTVAL), 'MAKE HYGIENE KITS', TO_DATE('03/27/2017', 'MM/DD/YYYY'),TO_DATE('04/27/2017', 'MM/DD/YYYY'), 'PACKING', null);

-- Madz 1 : populated item table
-- Chil 2 : sequence, concat, added some rows
CREATE SEQUENCE ITEM_ID_SEQ START WITH 2101 INCREMENT BY 1 MAXVALUE 10000 NOCACHE;

INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'WATER BOTTLES', 12.99, 9998);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'FOOD PACK', 25.00, 9994);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'FIRST AID KIT', 10.50, 1005);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'FLASHLIGHT', 5.50, 782);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'WHISTLE', 2.99, 9678);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'DUST MASK', 2.50, 2004);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'DUCT TAPE', 1.99, 500);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'PLASTIC BAG', 0.25, 7777);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'TOILET PAPER', 5.99, 0);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'BLANKET', 8.70, 170);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'CHILDREN BOOK', 6.88, 310);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'BATTERIES', 2.98, 170);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'BLANKET', 18.97, 123);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'LIGHT BULB', 8.70, 55);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'BOX OF FACE MASK', 8.70, 200);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'CANNED GOOD', 0.97, 650);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'HAND SOAP', 2.00, 323);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'DETERGENT', 8.70, 445);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'STUFFED TOY', 7.50, 250);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'BALL', 13.48, 100);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'COUGH MEDICINE', 8.29, 320);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'WRITING PAD', 4.99, 1840);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'BOX OF PENCIL', 2.67, 1400);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'TOOTHPASTE', 1.47, 440);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'CRAYONS', 2.42, 250);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'NOTEBOOK', 1.00, 500);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'TOOTHBRUSH', 2.57, 92);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'SANITARY PAD', 5.97, 118);
INSERT INTO ITEM VALUES (CONCAT('I',ITEM_ID_SEQ.NEXTVAL), 'SHAMPOO', 1.99, 10);

-- Madz 1 : populated package table
-- Chil 2 : sequence, concat
-- Chil 3: added rows, modified the dates to match with other tables
CREATE SEQUENCE PKG_ID_SEQ START WITH 4001 INCREMENT BY 1 MAXVALUE 1000000 NOCACHE;

INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('05/07/2021', 'MM/DD/YYYY'), 98, 'T1');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('04/25/2021', 'MM/DD/YYYY'), 22, 'T15');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('12/21/2017', 'MM/DD/YYYY'), 35, 'T29');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('05/03/2021', 'MM/DD/YYYY'), 46, 'T57');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('03/08/2021', 'MM/DD/YYYY'), 57, 'T64');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('05/02/2021', 'MM/DD/YYYY'), 68, 'T71');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('05/01/2021', 'MM/DD/YYYY'), 49, 'T113');
INSERT INTO PACKAGE VALUES (CONCAT('P', PKG_ID_SEQ.NEXTVAL), TO_DATE('06/27/2021', 'MM/DD/YYYY'), 35, 'T106');

-- Chil 1: populate assignment table, sequence, concat
-- Giu 2 : changed some dates to test trigger
-- Giu 2 : changed values since assignment table changed
-- Giu 3 : changed values since assignment table changed yet again
-- Chil 3 : modified the dates, added some rows to match with other tables because assignment table was changed yet again pt2
-- Giu 5 : modified the dates since assignment table was changed yet again pt3
CREATE SEQUENCE ASSIGN_ID_SEQ START WITH 0001 INCREMENT BY 2 MAXVALUE 100000 NOCACHE;

INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9000',  'T1', TO_DATE('05/02/2021', 'MM/DD/YYYY'), 2);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9050', 'T15', TO_DATE('04/21/2021', 'MM/DD/YYYY'), 3);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9010', 'T15', TO_DATE('04/21/2021', 'MM/DD/YYYY'), 4);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9030', 'T113', TO_DATE('04/20/2017', 'MM/DD/YYYY'), 6);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9090', 'T106', TO_DATE('06/20/2021', 'MM/DD/YYYY'), 7);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9100', 'T15',  TO_DATE('04/21/2021', 'MM/DD/YYYY'), 1);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9030', 'T57', TO_DATE('04/27/2021', 'MM/DD/YYYY'), 2);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9080', 'T64', TO_DATE('03/01/2021', 'MM/DD/YYYY'), 2);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9010', 'T71', TO_DATE('05/04/2021', 'MM/DD/YYYY'), 2);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9070', 'T113', TO_DATE('04/20/2017', 'MM/DD/YYYY'), 4);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9040', 'T1', TO_DATE('05/02/2021', 'MM/DD/YYYY'), 5);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9020', 'T29', TO_DATE('12/10/2017', 'MM/DD/YYYY'), 5);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9090', 'T57', TO_DATE('04/23/2021', 'MM/DD/YYYY'), 5);
INSERT INTO ASSIGNMENT VALUES(CONCAT('A', ASSIGN_ID_SEQ.NEXTVAL), 'V9020', 'T71', TO_DATE('05/04/2021', 'MM/DD/YYYY'), 3);

-- Chil 1: populate package_item table, concat, sequence
-- Chil 2 : modified the values
CREATE SEQUENCE PKG_ITM_ID_SEQ START WITH 50001 INCREMENT BY 10 NOCACHE;

INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4001', 'I2116', 120);
INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4002', 'I2115', 80);
INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4003', 'I2108', 30);
INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4004', 'I2101', 60);
INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4005', 'I2112', 178);
INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4006', 'I2110', 20);
INSERT INTO PACKAGE_ITEM VALUES(CONCAT('S', PKG_ITM_ID_SEQ.NEXTVAL), 'P4007', 'I2111', 46);

---------------------------------------------------------------------------------------------------
-- Giu 2 : to see output
SET SERVEROUTPUT ON;

-- Chil 3 : create indexes
CREATE INDEX IDX_VOLUNTEERS ON VOLUNTEER(VOL_FNAME, VOL_LNAME, VOL_PHONE, VOL_EMAIL);
CREATE INDEX IDX_ASSIGNMENT ON ASSIGNMENT(VOL_ID, TASK_ID);
CREATE INDEX IDX_ITEM ON ITEM(ITEM_DESCRIPTION);
CREATE INDEX IDX_PACKAGE ON PACKAGE(PKG_DATE, TASK_ID);
CREATE INDEX IDX_TASK ON TASK (TASK_STATUS, TASK_NAME, TASK_TYPE);
CREATE INDEX IDX_PACKAGE_ITEM ON PACKAGE_ITEM(PKG_ITEM_QOH);

----------------------------
-- FOR CHECKING ALL THE TABLES
SELECT * FROM VOLUNTEER;
SELECT * FROM ASSIGNMENT ORDER BY VOL_ID;
SELECT * FROM TASK;
SELECT * FROM PACKAGE;
SELECT * FROM PACKAGE_ITEM;
SELECT * FROM ITEM;
SELECT * FROM ALL_VOLUNTEERS;

-- Giu 2 : counting the nb of tasks each volunteer has
SELECT A.VOL_ID, COUNT(T.TASK_ID) as NB_TASKS
FROM TASK T, ASSIGNMENT A, VOLUNTEER V 
where A.TASK_ID = T.TASK_ID AND V.VOL_ID = A.VOL_ID
GROUP BY A.VOL_ID
ORDER BY VOL_ID;

-- Giu 5 : counting the nb of hours each volunteer has
SELECT VOL_ID, SUM(ASSIGN_HOURS) AS TOTAL_HOURS 
FROM ASSIGNMENT NATURAL JOIN VOLUNTEER
GROUP BY VOL_ID;

-------------------------------------

-- Chil 1: FOR DROPPING ANY SEQUENCE/triggers 
DROP SEQUENCE ASSIGN_ID_SEQ;
DROP SEQUENCE ITEM_ID_SEQ;
DROP SEQUENCE PKG_ID_SEQ;
DROP SEQUENCE PKG_ITM_ID_SEQ;
DROP SEQUENCE TASK_ID_SEQ;
DROP SEQUENCE VOL_ID_SEQ;
DROP TRIGGER trg_task_updatestatus;
-----------------------------------

-- Giu 2 : testing constraint
UPDATE TASK
SET TASK_START_DATE = TO_DATE('07/23/2021')
WHERE TASK_ID = 'T106';

UPDATE TASK
SET TASK_START_DATE = TO_DATE('06/23/2021')
WHERE TASK_ID = 'T71';

-- Chil 3 : created procedure to update hours
-- Giu 4 : updated procedure to fix minor errors related to design changes
CREATE OR REPLACE PROCEDURE PRC_UPDATE_ASSIGN_HOURS(IN_VOL_ID IN CHAR, ASSIGN_HR IN NUMBER, IN_ASSIGN_DATE IN DATE)
    AS
    BEGIN
        UPDATE ASSIGNMENT
            SET ASSIGN_HOURS =  ASSIGN_HOURS + ASSIGN_HR
            WHERE VOL_ID = IN_VOL_ID 
            AND ASSIGN_DATE = IN_ASSIGN_DATE;
    END;

-- testing PRC_UPDATE_VOL_HOURS
EXEC PRC_UPDATE_VOL_HOURS('V9000', 5, TO_DATE('04/20/2017', 'MM/DD/YYYY'));

---------------------------------------------------------------------------------------------------------------------------------------------------

-- REQUIRED QUERIES
-- Giu 1 : created view all_volunteer that gets details of all volunteers that assigned tasks in the organization.
-- Chil 2 : edited the view all_volunteer 
-- Giu 5 : edited view

-- 1. Create a view named  all_volunteer that  gets details  of  all volunteers  that  assigned  tasks in  the organization. 
CREATE OR REPLACE VIEW ALL_VOLUNTEERS 
AS 
SELECT VOL_ID, VOL_FNAME, VOL_LNAME, VOL_PHONE, VOL_EMAIL, ASSIGN_DATE, ASSIGN_HOURS, TASK_ID, TASK_TYPE
FROM VOLUNTEER NATURAL JOIN ASSIGNMENT NATURAL JOIN TASK
ORDER BY VOL_ID;


-- Testing the view
SELECT * FROM ALL_VOLUNTEERS;

-- DROP VIEW ALL_VOLUNTEERS; -- IF you want to drop it


-- Madz 2 : made query
-- Giu 5 : edited query

-- 2. Get details of all tasks for a given volunteer for a specific start date.
SELECT * 
FROM TASK
WHERE TASK_ID IN
        (SELECT TASK_ID 
        FROM ASSIGNMENT
        WHERE VOL_ID = 'V9030')

AND TASK_START_DATE = TO_DATE ('04/20/2021', 'MM/DD/YYYY');


-- Madz 2 : made query

-- 3. Get details of all the packages made during a given date.
SELECT * 
FROM PACKAGE
WHERE PKG_DATE = TO_DATE ('05/07/2021', 'MM/DD/YYYY');


-- Madz 2 : made query

-- 4. Get the number of tasks that no volunteer has been assigned yet
SELECT COUNT(*) TASK_ID
FROM TASK
WHERE TASK_ID NOT IN 
                (SELECT TASK_ID 
                 FROM ASSIGNMENT);


/* commented because the real trigger is run above the insert statements for TASK table

-- Giu 2 : create trigger to update status
 5. A task  status for  each  task  can  be (“open”, “ongoing”,  “close”). 
   Create  a  trigger  named trg_updatestatus to update task_statusin the tasktable to “close” when the task is fulfilled 

CREATE OR REPLACE TRIGGER TRG_TASK_UPDATESTATUS
BEFORE UPDATE OR INSERT OF TASK_START_DATE, TASK_END_DATE ON TASK
FOR EACH ROW  
    DECLARE 
        TODAY_DATE DATE;
    BEGIN 
        SELECT TO_DATE(SYSDATE, 'MM/DD/YYYY') INTO TODAY_DATE FROM DUAL;
        
        IF (:NEW.TASK_START_DATE <= TODAY_DATE AND :NEW.TASK_END_DATE >= TODAY_DATE) THEN 
            :NEW.TASK_STATUS := UPPER('ONGOING');

        ELSIF (:NEW.TASK_END_DATE < TODAY_DATE) THEN 
            :NEW.TASK_STATUS := UPPER('CLOSED');

        ELSIF (:NEW.TASK_START_DATE >= TODAY_DATE) THEN
            :NEW.TASK_STATUS := UPPER('OPEN');
        END IF; 
    END;
/
*\
